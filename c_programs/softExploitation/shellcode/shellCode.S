.section .text
.globl _start
_start:
    # open syscall open()
    lea -4(%rbp), %rdi # buffer = 5 bytes from %rbp (f l a g \x00)(5 bytes including nullT)
    mov $0, %rsi # O_RDONLY = 0
    mov $0, %rdx # mode = 0
    mov $2, %rax # syscal 2 = open
    syscall
    mov %rax, %rdi # fd return from open
    lea +8(%rbp), %rsi # write whats read into 48th byte in buffer
    mov $48, %rdx # 48 size read
    mov $0, %rax # syscall 0 = read()
    syscall
    mov $1, %rdi # fd = stdout
    lea +8(%rbp), %rsi # buffer = 128 bytes from %rbp
    mov $48, %rdx
    mov $1, %rax # syscaul 1 = write()
    syscall
    # exit syscall
    xor %rax, %rax
    mov %rax, %rdi
    syscall
